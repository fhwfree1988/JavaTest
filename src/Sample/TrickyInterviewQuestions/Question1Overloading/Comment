Link :
    https://www.journaldev.com/552/java-tricky-interview-questions


Answer with Explanation :
    As we know that we can assign null to any object, so doesn’t compiler complains about this program? According to java specs, in case of overloading, compiler picks the most specific function. Obviously String class is more specific than Object class, hence it will print “String impl”.
    What if we have another method in the class like below:

    public static void foo(StringBuffer i){
            System.out.println("StringBuffer impl");
        }

    In this case, java compiler will throw an error as “The method foo(String) is ambiguous for the type Test” because String and StringBuffer, none of them are more specific to others. A method is more specific than another if any invocation handled by the first method could be passed on to the other one without a compile-time type error. We can pass String as a parameter to Object argument and String argument but not to StringBuffer argument method.
